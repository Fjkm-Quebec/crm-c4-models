name: Generate PlantUML Diagrams

on:
  push:
    branches:
      - main # Or your default branch
    paths: ['src/**.puml', '.github/workflows/**.yml'] # Only run if .puml files in src/ change
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # Required to push changes back to the repository
  pages: write # Required to push changes to GitHub Pages if needed

jobs:
  generate_diagrams:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Debug List Files in src
        run: ls -la src

      - name: Debug Check for .puml files
        run: |
          find src -name "*.puml" -print
          if [ -z "$(find src -name "*.puml" -print)" ]; then
            echo "No .puml files found in src directory!"
            exit 1
          fi

      - name: Debug Check content of .puml files
        run: |
          for file in src/*.puml; do
            echo "Content of $file:"
            cat "$file"
          done

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Or 'zulu', 'adopt', etc.
          java-version: '17' # PlantUML needs Java

      - name: Debug Java version
        run: java -version

      - name: Cache Graphviz
        id: cache-graphviz
        uses: actions/cache@v4
        with:
          path: /usr/bin/dot
          key: ${{ runner.os }}-graphviz

      - name: Install Graphviz
        if: steps.cache-graphviz.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz

      - name: Cache PlantUML
        id: cache-plantuml
        uses: actions/cache@v4
        with:
          path: plantuml.jar
          key: ${{ runner.os }}-plantuml-1.2024.3

      - name: Download PlantUML
        if: steps.cache-plantuml.outputs.cache-hit != 'true'
        run: wget https://github.com/plantuml/plantuml/releases/download/v1.2024.3/plantuml-1.2024.3.jar -O plantuml.jar # Check latest version

      - name: Create diagrams directory
        run: mkdir -p diagrams

      - name: Debug Check diagrams directory permissions (Before PlantUML)
        run: ls -la diagrams

      - name: Debug Check if plantuml.jar is executable
        run: |
          if [ -x plantuml.jar ]; then
            echo "plantuml.jar is executable"
          else
            echo "plantuml.jar is NOT executable"
          fi

      - name: Generate PNG Diagrams (Simple)
        run: |
          cd $GITHUB_WORKSPACE
          echo "Processing src/simple.puml..."
          java -jar plantuml.jar -verbose -tpng src/simple.puml -o diagrams 2>&1 | tee plantuml_output.log || exit 1
          cat plantuml_output.log

      - name: Generate PNG Diagrams
        run: |
          cd $GITHUB_WORKSPACE
          for file in src/*.puml; do
            echo "Processing $file..."
            java -jar plantuml.jar -verbose -tpng "$file" -o diagrams 2>&1 | tee plantuml_output.log || exit 1
            cat plantuml_output.log
          done

      - name: Debug List diagrams directory
        run: ls -la diagrams

      - name: Debug Git status
        run: git status

      - name: Commit and Push diagrams
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: Auto-generate PlantUML diagrams"
          file_pattern: 'diagrams/*' # Commit only changes in the diagrams directory
          branch: ${{ github.head_ref }}
